buildscript {
    ext.remoteftc_version = '0.2.0'
}

apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

android {
    compileSdk 31

    defaultConfig {
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation 'org.firstinspires.ftc:RobotCore:7.0.0'
    implementation('org.nanohttpd:nanohttpd-websocket:2.3.1') {
        exclude module: 'nanohttpd'
    }
    implementation 'org.firstinspires.ftc:FtcCommon:7.0.0'
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task androidJavadocs(type: Javadoc) {
    failOnError = false
    source = android.sourceSets.main.java.srcDirs
    ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
    classpath += files(ext.androidJar)
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

def pomConfig = {
    licenses {
        license {
            name "The MIT License"
            url "https://opensource.org/licenses/MIT"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "rbrott"
            name "Ryan Brott"
            email "rcbrott@gmail.com"
        }
    }

    scm {
        url "https://github.com/acmerobotics/ftc-dashboard"
    }
}

publishing {
    repositories {
        maven {
            name = "Lavallee"
            url = "https://maven.lavallee.one/releases"
            credentials {
                username = mavenUsername
                password = mavenPassword
            }
        }
    }
    publications {
        maven(MavenPublication) {
            artifact("$buildDir/outputs/aar/library-release.aar")
            artifact androidSourcesJar
            artifact androidJavadocsJar
            groupId = 'com.lavalleeale.remoteftc'
            artifactId = 'remoteftc'
            version remoteftc_version
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Remote Robot Control for FTC')
                root.appendNode('name', 'Remote FTC')
                root.appendNode('url', 'https://github.com/lavalleeale/remoteftc')
                root.children().last() + pomConfig
            }

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each { dep ->
                    // Ensure dependencies such as fileTree are not included.
                    if (dep instanceof ModuleDependency) {
                        def moduleDep = (ModuleDependency) dep
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', moduleDep.group)
                        dependencyNode.appendNode('artifactId', moduleDep.name)
                        dependencyNode.appendNode('version', moduleDep.version)
                        if (dep.excludeRules.size() > 0) {
                            def exclusionsNode = dependencyNode.appendNode('exclusions')
                            dep.excludeRules.every { excludedDep ->
                                def exclusionNode = exclusionsNode.appendNode('exclusion')
                                exclusionNode.appendNode('groupId', moduleDep.group)
                                exclusionNode.appendNode('artifactId', excludedDep.module)
                            }
                        }
                    }
                }
            }
        }
    }
}